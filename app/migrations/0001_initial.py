# Generated by Django 4.2.15 on 2024-12-19 22:52

import datetime
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ACL_GROSS',
            fields=[
                ('ID', models.BigAutoField(primary_key=True, serialize=False)),
                ('HostName', models.TextField()),
                ('First_Seen', models.DateField()),
                ('Name', models.TextField()),
                ('Line', models.TextField()),
                ('Type', models.TextField()),
                ('Action', models.TextField()),
                ('Service', models.TextField()),
                ('Source', models.TextField()),
                ('S_Port', models.TextField()),
                ('Dest', models.TextField()),
                ('D_Port', models.TextField()),
                ('Rest', models.TextField()),
                ('Inactive', models.TextField()),
                ('Hitcnt', models.TextField()),
                ('Hash', models.TextField()),
                ('Delta_HitCnt', models.BigIntegerField()),
            ],
            options={
                'verbose_name': 'ACL_GROSS',
                'verbose_name_plural': 'ACL_GROSS',
                'db_table': 'ACL_GROSS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ACL_Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HostName', models.CharField(max_length=120)),
                ('Nameif', models.CharField(blank=True, max_length=120, null=True)),
                ('ACL_Name', models.CharField(max_length=120)),
                ('ACL_Length', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('ACL_ELength', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Inactive', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_NoLog', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_HitCnt_Zero', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('ACL_Space_ICMP', models.FloatField(blank=True, default=0, null=True)),
                ('ACL_Space_TCP', models.FloatField(blank=True, default=0, null=True)),
                ('ACL_Space_UDP', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'ACL_Summary',
                'verbose_name_plural': 'ACL_Summary',
                'db_table': 'ACL_Summary',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Active_Capture',
            fields=[
                ('ID', models.SmallAutoField(primary_key=True, serialize=False)),
                ('HostName', models.CharField(blank=True, default='', max_length=120, null=True)),
                ('Name', models.CharField(blank=True, default='', max_length=120, null=True)),
                ('First_Seen', models.DateField()),
                ('Content', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default='', max_length=200, null=True), size=None)),
            ],
            options={
                'verbose_name': 'Active_Capture',
                'verbose_name_plural': 'Active_Capture',
                'db_table': 'Active_Capture',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Default_Credentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='Default_Credentials', editable=False, max_length=20)),
                ('Username', models.CharField(blank=True, max_length=120, null=True)),
                ('Password', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'verbose_name': 'Default_Credentials',
                'verbose_name_plural': 'Default_Credentials',
                'db_table': 'Default_Credentials',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Devices_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Device_Vendor', models.CharField(choices=[('Cisco', 'Cisco'), ('PaloAlto', 'PaloAlto')], default='Cisco', max_length=20, verbose_name='Vendor Name')),
                ('Device_Model', models.CharField(max_length=120, verbose_name='Device Model')),
                ('Default_Username', models.CharField(blank=True, max_length=120)),
                ('Default_Password', models.CharField(blank=True, max_length=120)),
            ],
            options={
                'verbose_name': 'Devices_Model',
                'verbose_name_plural': 'Devices_Model',
                'db_table': 'Devices_Model',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Global_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='Global_Settings', editable=False, max_length=16)),
                ('Max_Capture_Age', models.IntegerField(default=10)),
                ('Max_Port_Range', models.IntegerField(default=10)),
                ('Max_IPv4_Range', models.IntegerField(default=10)),
                ('Min_Hitcnt_Threshold', models.IntegerField(default=20)),
                ('Max_ACL_HitCnt0_Age', models.IntegerField(default=180)),
                ('Max_ACL_Inactive_Age', models.IntegerField(default=180)),
                ('Max_ACL_Expand_Ratio', models.IntegerField(default=100)),
                ('N_ACL_Most_Triggered', models.IntegerField(default=10)),
                ('Max_NAT_ZeroHit_Age', models.IntegerField(default=100)),
                ('Max_NAT_Inactive_Age', models.IntegerField(default=100)),
                ('Min_NAT_Hitcnt_Threshold', models.IntegerField(default=20)),
                ('N_NAT_Most_Triggered', models.IntegerField(default=5)),
                ('WTFLog_Duration_Days', models.IntegerField(default=10)),
            ],
            options={
                'verbose_name': 'Global_Settings',
                'verbose_name_plural': 'Global_Settings',
                'db_table': 'Global_Settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Show_NAT_DB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HostName', models.CharField(max_length=120)),
                ('Last_Seen', models.DateField()),
                ('Section', models.PositiveSmallIntegerField()),
                ('Line_N', models.PositiveBigIntegerField()),
                ('IF_IN', models.CharField(max_length=120)),
                ('IF_OUT', models.CharField(max_length=120)),
                ('StaDin', models.CharField(max_length=120)),
                ('SRC_IP', models.CharField(max_length=120)),
                ('SNAT_IP', models.CharField(max_length=120)),
                ('DST_IP', models.CharField(max_length=120)),
                ('DNAT_IP', models.CharField(max_length=120)),
                ('service', models.CharField(max_length=120)),
                ('SRVC', models.CharField(max_length=120)),
                ('DSRVC', models.CharField(max_length=120)),
                ('inactive', models.CharField(max_length=120)),
                ('Direction', models.CharField(max_length=120)),
                ('DESC', models.CharField(max_length=120)),
                ('Tr_Hit', models.PositiveBigIntegerField()),
                ('Un_Hit', models.PositiveBigIntegerField()),
                ('Delta_Tr_Hit', models.PositiveBigIntegerField()),
                ('Delta_Un_Hit', models.PositiveBigIntegerField()),
                ('Nat_Line', models.CharField(max_length=3000)),
                ('SRC_Origin', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=120), size=None)),
                ('SRC_Natted', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=120), size=None)),
                ('DST_Origin', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=120), size=None)),
                ('DST_Natted', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=120), size=None)),
            ],
            options={
                'verbose_name': 'Show_NAT_DB',
                'verbose_name_plural': 'Show_NAT_DB',
                'db_table': 'Show_NAT_DB',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='WTF_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TimeStamp', models.DateTimeField(blank=True, default=datetime.datetime(2000, 1, 1, 1, 0), null=True)),
                ('Level', models.CharField(max_length=120)),
                ('Message', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'WTF_Log',
                'verbose_name_plural': 'WTF_Log',
                'db_table': 'WTF_Log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='My_Devices',
            fields=[
                ('HostName', models.CharField(max_length=120, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')])),
                ('IP_Address', models.GenericIPAddressField(primary_key=True, serialize=False)),
                ('Username', models.CharField(blank=True, max_length=120, null=True)),
                ('Password', models.CharField(blank=True, max_length=120, null=True)),
                ('Enabled', models.BooleanField(default=True)),
                ('Last_Check', models.DateField(blank=True, default=datetime.date(2000, 1, 1), null=True)),
                ('TimeStamp_t0', models.DateTimeField(blank=True, default=datetime.datetime(2000, 1, 1, 1, 0), null=True)),
                ('TimeStamp_t1', models.DateTimeField(blank=True, default=datetime.datetime(2000, 1, 1, 1, 0), null=True)),
                ('Delta_TimeStamps', models.CharField(default='', max_length=120)),
                ('UpTime', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Check_Duration', models.DurationField(default=datetime.timedelta(0))),
                ('Fetching_Config_Spinner', models.BooleanField(default=False)),
                ('Processing_Conf_Spinner', models.BooleanField(default=False)),
                ('Config_Diff_Added_Lines', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Config_Diff_Remvd_Lines', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Config_Total_Lines', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Not_Ascii', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Unused_ACL', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Declared_ACL', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Percent_Unused_ACL', models.FloatField(blank=True, default=0, null=True)),
                ('Declared_NAT', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Interfaces', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Interfaces_NoACL', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Capture', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Capture_CircBuff', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Capture_Active', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Capture_Old', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_NET_Declared', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_NET_Unapplied', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_NET_Duplicated', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_GRP_NET_Declared', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_GRP_NET_Unapplied', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_GRP_NET_Duplicated', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_SVC_Declared', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_SVC_Unapplied', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_SVC_Duplicated', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_GRP_SVC_Declared', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_GRP_SVC_Unapplied', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_OBJ_GRP_SVC_Duplicated', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('SUM_OBJ_Declared', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Lines', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Lines_Expanded', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_NoLog', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_LogDisabled', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_HitCnt_Zero', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_HitCnt_Zero_toDel', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Inactive', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Inactive_toDel', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Active', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Remarks', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Oversize', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_ACL_Oversize_Expanded', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Prct_ACL_Space_TCP', models.FloatField(default=0)),
                ('Prct_ACL_Space_UDP', models.FloatField(default=0)),
                ('Prct_ACL_Space_ICMP', models.FloatField(default=0)),
                ('Max_Range_IP', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('Max_Range_Port', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Lines', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_TrHit_0', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_UnHit_0', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_HitCnt_Zero', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_HitCnt_Zero_toDel', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Inactive', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Inactive_toDel', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Average_Position', models.FloatField(blank=True, default=0, null=True)),
                ('N_NAT_Incremented', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Resetted', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Deleted', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_New', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Sum_Delta', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_NAT_Sum_Delta_sorted', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Total_Routes', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('N_Redun_Routes', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('RUN_Last_Run_Time', models.DateTimeField(blank=True, null=True)),
                ('RUN_Day_of_Week', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], default='MON', max_length=20)),
                ('RUN_Time_of_Day', models.CharField(choices=[('00:00', '00:00'), ('00:30', '00:30'), ('01:00', '01:00'), ('01:30', '01:30'), ('02:00', '02:00'), ('02:30', '02:30'), ('03:00', '03:00'), ('03:30', '03:30'), ('04:00', '04:00'), ('04:30', '04:30'), ('05:00', '05:00'), ('05:30', '05:30'), ('06:00', '06:00'), ('06:30', '06:30'), ('07:00', '07:00'), ('07:30', '07:30'), ('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00'), ('19:30', '19:30'), ('20:00', '20:00'), ('20:30', '20:30'), ('21:00', '21:00'), ('21:30', '21:30'), ('22:00', '22:00'), ('22:30', '22:30'), ('23:00', '23:00'), ('23:30', '23:30')], default='00:30', max_length=5)),
                ('RUN_Enabled', models.BooleanField(default=True)),
                ('Type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.devices_model')),
            ],
            options={
                'verbose_name': 'My_Devices',
                'verbose_name_plural': 'My_Devices',
                'db_table': 'My_Devices',
                'managed': True,
            },
        ),
    ]
